# =========================================================
# GitCmd.txt
# ---------------------------------------------------------
# ⚠️ This file is JUST A NOTE for myself.
# Git does NOT read this file automatically.
# 
# If I want to make an alias real, I must run the line in
# a terminal once:
#     git config --global alias.<name> '<command>'
#
# Aliases live in my global ~/.gitconfig (Linux/Mac)
# or C:\Users\<me>\.gitconfig (Windows).
# They persist until I delete them with:
#     git config --global --unset alias.<name>
#
# They are NOT tied to a specific repo: all repos share them.
# They only disappear if I:
#   • uninstall Git and delete my .gitconfig
#   • or move to another machine (unless I copy .gitconfig)
# =========================================================

# --- Aliases I currently use ---

# Savepoint alias:
# Creates an auto-save commit + timestamp tag, then pushes only branch + tag.
git config --global alias.savepoint '!t=$(date +%Y-%m-%d_%H-%M-%S) && git add . && git commit -m "Auto-save" && git tag -a "savepoint-$t" -m "Archived version" && git push origin HEAD && git push origin "refs/tags/savepoint-$t"'

# Release alias:
# Creates & switches to a new branch, commits, tags, and pushes branch + tag.
git config --global alias.release '!f() { \
  branch=$1; \
  shift; \
  if [ -z "$branch" ]; then \
    echo "Usage: git release <branch-name>"; \
    return 1; \
  fi; \
  read -p "Enter release description: " desc; \
  git checkout -b "$branch" && \
  git add . && \
  git commit --allow-empty -m "Release $branch: $desc" && \
  git tag -a "$branch" -m "$desc" && \
  git push origin "refs/heads/$branch:refs/heads/$branch" && \
  git push origin "refs/tags/$branch:refs/tags/$branch"; \
}; f'

# Cleanup alias:
# Deletes a branch or tag locally and remotely, with confirmation.
git config --global alias.cleanup '!f() { \
  if [ -z "$1" ]; then \
    echo "Usage: git cleanup <branch-or-tag>"; \
    return 1; \
  fi; \
  target=$1; \
  current=$(git rev-parse --abbrev-ref HEAD); \
  if [ "$target" = "$current" ]; then \
    echo "⛔ You are currently on [$target]. Switch to another branch before deleting it."; \
    return 1; \
  fi; \
  read -p "⚠️  Delete local and remote [$target]? (Y/N) " ans; \
  case "$ans" in \
    [Yy]) \
      git branch -D "$target" 2>/dev/null || true; \
      git tag -d "$target" 2>/dev/null || true; \
      git push origin --delete "$target" 2>/dev/null || true; \
      echo "✅ [$target] deleted (local + remote if existed).";; \
    *) echo "❌ Cancelled.";; \
  esac; \
}; f'

# --- Usage examples ---
# git release v0.70    -> makes branch v0.70, tags it, pushes both
# git savepoint        -> auto-save commit + timestamp tag
# git cleanup v0.70    -> deletes branch/tag v0.70 locally + remotely

# =========================================================
# Dictionary / Useful commands
# ---------------------------------------------------------

# Show all global aliases currently active
git config --get-regexp '^alias\.'

# Remove a specific alias
git config --global --unset alias.<name>

# Check where config is stored (global/system/local)
git config --list --show-origin

# Show all refs (branches + tags)
git show-ref --heads --tags

# =========================================================
# Quick Reference (friendly description)
# ---------------------------------------------------------

Your Git Aliases:

1. git release — Creates a release branch with tags
   • Creates a new branch with the specified name
   • Prompts for a release description
   • Commits changes (empty if nothing staged), creates a tag, and pushes to origin
   • Usage: git release <branch-name>

2. git savepoint — Creates an auto-save point
   • Automatically adds all changes and commits with "Auto-save" message
   • Creates a timestamped tag (format: savepoint-YYYY-MM-DD_HH-MM-SS)
   • Pushes both the commit and tag to origin

3. git cleanup — Deletes branches or tags locally and remotely
   • Safely deletes a specified branch or tag from both local and remote
   • Prevents deletion if you're currently on that branch
   • Prompts for confirmation before deletion (Y/N)
   • Usage: git cleanup <branch-or-tag>
